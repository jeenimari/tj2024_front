/*1.문자열String : " " or ' ' or ``(백틱)
    10 vs " 10 " : 자료는 10 같다 . 자료의 타입은 다르다.**/

/*2.숫자(Number)
    예]10,7,3.14*/

/*    3.불리언 (Boolean)
        예 true or false */
    /*변수
        -변수(변하는 수) vs (상수)고정된 수 변하지않는 수
        1.하나의 자료/데이터를 저장할 수 있는 메모리 공간 
        2.let 키워드 , const 키워드*/    
        /*
        10//숫자 타입
        "안녕하세요" //문자열 타입
        true        //불리언타입
        */
//리터럴 : 데이터/자료 그 자체의 자료 - 각언어들이 미리 정의해두고 동일한 데이터/자료를 참조 사용하는 방법
//메모리(저장소) 효율성 극대화 하기 위해서
        true

        let 숫자상자 = 10 //숫자 타입의 자료를 '숫자상자'변수에 저장
        let 문자열상자="안녕하세요" //문자열 타입의 자료를 문자열상자 변수에 저장
        let 불리언상자 =true;//불리언 타입의 자료를 '불리언상자'이라는 변수에 저장

//[1] 변수 선언 하는 방법
    //1.let : 변수 선언시 사용되는 키워드(미리만들어진 단어 의미가 부여된)
    //2.변수명 : 데이터/자료 를 저장하는 메모리의 상징적인 이름(식별-class/id등 구분)
    //        -영어 권장 중복불가능,숫자로 시작x ,띄어쓰기X
    //3. = : 대입, 오른쪽 값을 왼쪽 항에 대입하는 연산자
    //4. 리터럴/값 그자체
    let 변수상자1 = 10;

    //[2] 변수를 사용하는 이유? : 값 저장 ,값 재사용, 그 자체 값의 의미 부여(중요)
    console.log(10);
    console.log(변수상자1);
    변수상자1 = 20;
    변수상자1 = 20 + 10; //20 + 10 했을때 새로운 리터럴 30 대입함

    //[3] 변수의 값 변경하기
    //1.변수명 = 새로운값 : 변경할변수명 = 새로운값
    변수상자1 = "유재석"
    console.log(변수상자1)

    //[4] 변수의 연산
    let 점수1 = 10
    let 점수2 = 20
    let 결과 = 점수1 + 점수2 //html,css는 코드가 보이는게 다 , JS/JAVA/PYTHON은 보이는게 다가아님
        //명령어 처리 순서
        //1. let 결과 = 점수1+ 점수2
        //2. =대입 기준으로 오른쪽 먼저 처리, 10먼저 처리
        //3. 점수2 가진값을 호출 반환 . 10+20 20처리
        //4.연산처리 +  , 30,let 결과 = 30
        //5.변수의 메모리 공간 호출 , let 결과 =30
        //6.대입 연산자 , 결과 (30)

    점수2= 100;
    console.log(결과); // 30일까 110일까 ? 답은 30임 왜?

    //[5]변수의 값이 대입되지 않을때
    let 이름
    console.log(이름)//undefined 타입 , 변수의 값을 초기(처음)화(대입)없다.(값없다.)

    //[6] 상수만들기

        //1.const : 상수만들기 위한 키워드
        //2.상수명 :
        //3. = 
        //4. 리터럴

        const 고정상자 = '안녕하세요'
        //[7] 상수 수정 불가능.
        고정상자 = 10;
